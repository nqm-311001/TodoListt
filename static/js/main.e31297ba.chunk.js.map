{"version":3,"sources":["components/TodoList/index.jsx","components/AddNewTodo/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["TodoList","todos","setNewTodos","showAdd","setShowAdd","setFixTodo","deleteTodo","setNextLevel","status","filter","setFilter","filterList","setFilterList","useState","sort","setSort","textSearch","setTextSearch","useEffect","sorted","length","getColor","newTodo","a","b","id","name","findIndex","item","filterLevel","className","onClick","onChange","e","target","value","type","indexOf","map","index","Badge","bg","uudi","AddNewTodo","fixTodo","setNewTodo","isEdit","setIsEdit","showAlert","setShowAlert","updateNewTodo","hidden","trim","todo","App","setTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e31297ba.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"./todoList.css\";\r\nimport {Badge} from 'react-bootstrap'\r\n\r\nconst TodoList = ({todos, setNewTodos, showAdd, setShowAdd, setFixTodo, deleteTodo, setNextLevel, filter, setFilter, status, filterList, setFilterList}) => {\r\n\r\n  const [sort, setSort] = useState(false)\r\n  const [textSearch, setTextSearch] = useState(\"\")\r\n  \r\n  useEffect(() => {\r\n    sorted()\r\n  }, [todos.length])\r\n\r\n  const getColor = (status) => {\r\n    if(status === \"Nguy cấp\") return \"danger\"\r\n    else if(status === \"Phải làm nhưng chưa cần gấp\") return \"warning\"\r\n    else if(status === \"Lúc nào cũng được\") return \"success\"\r\n    else if(status === \"Không làm cũng được\") return \"primary\"\r\n  }\r\n  \r\n  const sorted = () => {\r\n    const newTodo = [...todos]\r\n    if(sort === \"Sắp xếp theo ID\") {\r\n      newTodo.sort((a,b) => {\r\n        return a.id > b.id ? 1 : -1\r\n      })\r\n    }\r\n    else if(sort === \"Sắp xếp theo tên công việc\") {\r\n      newTodo.sort((a,b) => {\r\n        return a.name > b.name ? 1 : -1\r\n      })\r\n    }\r\n    else if(sort === \"Sắp xếp theo mức độ\") {\r\n      newTodo.sort((a,b) => {\r\n        const indexA = status.findIndex(item => item === a.status)\r\n        const indexB = status.findIndex(item => item === b.status)\r\n        return indexA > indexB ? 1 : -1\r\n      })\r\n    }\r\n    setNewTodos(newTodo)\r\n  }\r\n\r\n  const onChangeSort = (e) => {\r\n    setSort(e.target.value)\r\n  }\r\n\r\n  const filterLevel = (status) => {\r\n    if(status === 'all') setFilterList(todos)\r\n    else setFilterList(todos.filter(item => item.status === status))\r\n  }\r\n\r\n  const onChangeSearch = (e) => {\r\n    setTextSearch(e.target.value)\r\n  }\r\n\r\n  const search = () => {\r\n    setFilterList(todos.filter(\r\n      function(item){\r\n        return item.name.indexOf(textSearch) !== -1 || item.status.indexOf(textSearch) !== -1\r\n      }\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <div className=\"todoList\">\r\n      <div className=\"btns\">\r\n        <button className=\"addBTn\" onClick={() => setShowAdd(!showAdd)}>\r\n          THÊM CÔNG VIỆC MỚI\r\n        </button>\r\n        <select name=\"sort\" id=\"sort\" onChange={onChangeSort} value={sort}>\r\n          <option value=\"Sắp xếp theo ID\">Sắp xếp theo ID</option>\r\n          <option value=\"Sắp xếp theo tên công việc\">Sắp xếp theo tên công việc</option>\r\n          <option value=\"Sắp xếp theo mức độ\">Sắp xếp theo mức độ</option>\r\n        </select>\r\n        <button className=\"sortBtn\" onClick={() => sorted()}>SẮP XẾP</button>\r\n        <br />\r\n        <input type=\"text\" className=\"search_text\" onChange={onChangeSearch} />\r\n        <button className=\"searchBtn\" onClick={search}>TÌM KIẾM</button>   \r\n      </div>\r\n\r\n      <table className=\"todo_table\">\r\n        <tr>\r\n          <td className=\"title\">STT</td>\r\n          <td className=\"title\">Tên công việc</td>\r\n          <td className=\"title\">Mức độ</td>\r\n          <td className=\"title\">Hành động</td>\r\n        </tr>\r\n        {filterList.map((item, index) => {\r\n          return(\r\n            <>\r\n              <tr key={`${item.id}`}>\r\n              \r\n                <td>{index + 1}</td>\r\n                <td>{item.name}</td>\r\n                <td>\r\n                  {/* <span className=\"status\"\r\n                    style={{ backgroundColor: updateStatusColor(item.status) }}\r\n                    onClick={() => changeStatus(item)}\r\n                  >\r\n                    {item.status}\r\n                  </span> */}\r\n                  <Badge bg= {getColor(item.status)} onClick={() => setNextLevel(item.id)}>{item.status}</Badge>\r\n\r\n                </td>\r\n                <td>\r\n                  <button className=\"changeBtn\" onClick={() => setFixTodo(index)}>\r\n                    Sửa\r\n                  </button>\r\n                  <button className=\"deleteBtn\" onClick={() => deleteTodo(item.id)}>\r\n                    Xóa\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </>\r\n          )\r\n        })}          \r\n      </table>\r\n\r\n\r\n      <div className=\"filter\">\r\n        <span className=\"filterr\" onClick={() => filterLevel('all')}>Tất cả</span>\r\n        <span className=\"filterr\" onClick={() => filterLevel('Nguy cấp')}>Nguy cấp</span>\r\n        <span className=\"filterr\" onClick={() => filterLevel('Phải làm nhưng chưa cần gấp')}>Phải làm nhưng chưa cần gấp</span>\r\n        <span className=\"filterr\" onClick={() => filterLevel('Lúc nào cũng được')}>Lúc nào cũng được</span>\r\n        <span className=\"filterr\" onClick={() => filterLevel('Không làm cũng được')}>Không làm cũng được</span>\r\n      </div> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\r\nimport \"./addNew.css\";\r\n\r\nlet uudi = 1;\r\n\r\nexport default function AddNewTodo({ todos, setNewTodos, setShowAdd, fixTodo, setFixTodo}) {\r\n  const [newTodo, setNewTodo] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    status: \"Nguy cấp\",\r\n  })\r\n\r\n  const [isEdit, setIsEdit] = useState(false)\r\n  const [showAlert, setShowAlert] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (fixTodo != null) {\r\n      setNewTodo(fixTodo);\r\n      setIsEdit(true);\r\n    }\r\n  }, [fixTodo])\r\n\r\n  const updateNewTodo = (e) => {\r\n    const {name, value} = e.target;\r\n//    console.log(e.target);\r\n    setNewTodo({\r\n      ...newTodo,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  const addNewTodo = () => {\r\n    if(newTodo.name.trim() === '') {\r\n      setShowAlert(false)\r\n      return\r\n    }\r\n    newTodo.id = uudi\r\n    setNewTodos([...todos, newTodo]);\r\n    uudi += 1\r\n    setNewTodo({\r\n      id: 0,\r\n      name: \"\",\r\n      status: \"Nguy cấp\",\r\n    })\r\n    setShowAlert(true)\r\n  }\r\n\r\n  const handleFixBtn = () => {\r\n    if(newTodo.name.trim() === '') {\r\n      setShowAlert(false)\r\n      return\r\n    }\r\n    const index = todos.findIndex(todo => todo.id === newTodo.id)\r\n    todos[index] = newTodo\r\n    setNewTodo({\r\n      id: 0,\r\n      name: \"\",\r\n      status: \"Nguy cấp\"\r\n    })\r\n    setIsEdit(false)\r\n    setFixTodo(null)\r\n    setNewTodos([...todos])\r\n    setShowAlert(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"todoAdd\">\r\n      <div className=\"add_container\">\r\n        <span onClick={() => setShowAdd(false)}>X</span> \r\n        <div className=\"add_header\">\r\n          <h3>{isEdit ? \"Sửa công việc\" : \"Thêm công việc mới\"}</h3>\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"section\">\r\n            <label> Tên công việc</label>\r\n            <input className=\"input_dt\" type=\"text\" name=\"name\" value={newTodo.name} onChange={updateNewTodo}/>\r\n            <h3 hidden={showAlert} className=\"alert\">*Tên công việc không được để trống</h3>\r\n          </div>\r\n          <div className=\"section\">\r\n            <label>Mức độ</label>\r\n            <select className=\"input_dt\" name=\"status\" id=\"status\" onChange={updateNewTodo} value={newTodo.status}>\r\n              <option value=\"Nguy cấp\">Nguy cấp</option>\r\n              <option value=\"Phải làm nhưng chưa cần gấp\">Phải làm nhưng chưa cần gấp</option>\r\n              <option value=\"Lúc nào cũng được\">Lúc nào cũng được</option>\r\n              <option value=\"Không làm cũng được\">Không làm cũng được</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"btns\">\r\n          <button className=\"addBtn\" onClick={isEdit ? handleFixBtn : addNewTodo}>\r\n            {isEdit ? \"SỬA\" : \"THÊM\"}\r\n          </button>\r\n          <button className=\"cancelBtn\" onClick={() => setShowAdd(false)}>\r\n            HỦY BỎ\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import \"./App.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TodoList from \"./components/TodoList\";\nimport AddNewTodo from \"./components/AddNewTodo\";\nimport { useState, useEffect} from \"react\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [showAdd, setShowAdd] = useState(false);\n  const [fixTodo, setFixTodo] = useState(null);\n  const [filterList, setFilterList] = useState(todos);\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    setFilterList(todos)\n  }, [todos])\n\n  const status = [\n    \"Nguy cấp\",\n    \"Phải làm nhưng chưa cần gấp\",\n    \"Lúc nào cũng được\",\n    \"Không làm cũng được\"\n  ] \n\n  const deleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id != id))\n  }\n\n  const setNextLevel = (id) => {\n    const newTodo = [...todos]\n    const index = newTodo.findIndex(todo => todo.id === id)\n    if(newTodo[index].status === \"Nguy cấp\") newTodo[index].status = \"Phải làm nhưng chưa cần gấp\"\n    else if(newTodo[index].status === \"Phải làm nhưng chưa cần gấp\") newTodo[index].status = \"Lúc nào cũng được\"\n    else if(newTodo[index].status === \"Lúc nào cũng được\") newTodo[index].status = \"Không làm cũng được\"\n    else if(newTodo[index].status === \"Không làm cũng được\") newTodo[index].status = \"Nguy cấp\"\n    setTodos(newTodo)\n  }\n  return (\n\n    <div className=\"container\">\n      <h1>To Do List - Team Web D19</h1>\n      <div className=\"content\">\n        {showAdd ? <AddNewTodo todos={todos} setNewTodos={setTodos} setShowAdd={setShowAdd} fixTodo={fixTodo} setFixTodo={setFixTodo}/> : null}\n        \n        <TodoList todos={todos} setNewTodos={setTodos} setShowAdd={setShowAdd} showAdd={showAdd} deleteTodo={deleteTodo} setFixTodo={setFixTodo} setNextLevel={setNextLevel}\n                  filterList={filterList} setFilterList={setFilterList} status={status} filter={filter} setFilter={setFilter}/>\n      \n      </div>\n    </div>\n    \n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}